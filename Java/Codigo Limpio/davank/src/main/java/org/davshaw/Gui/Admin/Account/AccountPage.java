package org.davshaw.Gui.Admin.Account;

import javax.swing.JOptionPane;

import org.davshaw.Controller.AccountController;
import org.davshaw.Controller.UserController;
import org.davshaw.External.Checker;
import org.davshaw.External.ResultPack;
import org.davshaw.Gui.Admin.Admin.AdminPage;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Asus
 */
public class AccountPage extends javax.swing.JFrame {

    /**
     * Creates new form AccountPage
     */
    public AccountPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addBalanceButton = new javax.swing.JButton();
        withdrawBalanceButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        viewHistoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);

        addBalanceButton.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 20)); // NOI18N
        addBalanceButton.setText("Add Balance");
        addBalanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBalanceButtonActionPerformed(evt);
            }
        });

        withdrawBalanceButton.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 20)); // NOI18N
        withdrawBalanceButton.setText("W.draw Bal.");
        withdrawBalanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawBalanceButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 20)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        viewHistoryButton.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 20)); // NOI18N
        viewHistoryButton.setText("View History");
        viewHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHistoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBalanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(withdrawBalanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(addBalanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(withdrawBalanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(viewHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        AdminPage frame = new AdminPage();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void addBalanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBalanceButtonActionPerformed
        
        String dniStr = JOptionPane.showInputDialog(this, "Enter User Dni: ", "Add Balance", JOptionPane.QUESTION_MESSAGE);
        String amountStr = JOptionPane.showInputDialog(this, "Enter amount to add: ", "Add Balance", JOptionPane.QUESTION_MESSAGE);

        if (amountStr != null && dniStr != null && amountStr.length() > 0 && dniStr.length() > 0) {

            if(Checker.isDigit(dniStr)) {

                if(Checker.isDigit(amountStr)) {

                    int dni = Integer.parseInt(dniStr);
                    double amount = Double.parseDouble(amountStr);
                    ResultPack<Boolean> r1 = AccountController.accountExist(dni);
                    
                    if(r1.getResult()) {

                        ResultPack<Boolean> r2 = AccountController.addBalance(dni, amount);
                        JOptionPane.showMessageDialog(this, r2.getMessageFormatted(), "Add Balance", JOptionPane.INFORMATION_MESSAGE);

                    }
                    else {
                        JOptionPane.showMessageDialog(this, r1.getMessage(), "Add Balance", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else {
                    JOptionPane.showMessageDialog(this, "Invalid amount.", "Add Balance", JOptionPane.ERROR_MESSAGE);
                }

            }
            else {
                JOptionPane.showMessageDialog(this, "Invalid dni.", "Add Balance", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_addBalanceButtonActionPerformed

    private void viewHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHistoryButtonActionPerformed
        String dniStr = JOptionPane.showInputDialog(this, "Enter User Dni: ", "Account History", JOptionPane.QUESTION_MESSAGE);

        if (dniStr != null && dniStr.length() > 0) {

            if(Checker.isDigit(dniStr)) {

                    int dni = Integer.parseInt(dniStr);
                    ResultPack<Boolean> r1 = UserController.userExist(dni);
                    
                    if(r1.getResult()) {

                        ViewHistory frame = new ViewHistory();

                        frame.setUserDni(dni);
                        frame.executePostStart();
                        frame.setVisible(true);
                        this.dispose();
                    }
                    else {
                        JOptionPane.showMessageDialog(this, r1.getMessage(), "Account History", JOptionPane.ERROR_MESSAGE);
                    }

            }
            else {
                JOptionPane.showMessageDialog(this, "Invalid dni.", "Account History", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_viewHistoryButtonActionPerformed

    private void withdrawBalanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawBalanceButtonActionPerformed
        String dniStr = JOptionPane.showInputDialog(this, "Enter User Dni: ", "Withdraw Balance", JOptionPane.QUESTION_MESSAGE);
        String amountStr = JOptionPane.showInputDialog(this, "Enter amount to add: ", "Withdraw Balance", JOptionPane.QUESTION_MESSAGE);

        if (amountStr != null && dniStr != null && amountStr.length() > 0 && dniStr.length() > 0) {

            if(Checker.isDigit(dniStr)) {

                if(Checker.isDigit(amountStr)) {

                    int dni = Integer.parseInt(dniStr);
                    double amount = Double.parseDouble(amountStr);
                    ResultPack<Boolean> r1 = AccountController.accountExist(dni);
                    
                    if(r1.getResult()) {

                        ResultPack<Boolean> r2 = AccountController.withdrawBalance(dni, amount);
                        JOptionPane.showMessageDialog(this, r2.getMessageFormatted(), "Withdraw Balance", JOptionPane.INFORMATION_MESSAGE);

                    }
                    else {
                        JOptionPane.showMessageDialog(this, r1.getMessage(), "Withdraw Balance", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else {
                    JOptionPane.showMessageDialog(this, "Invalid amount.", "Withdraw Balance", JOptionPane.ERROR_MESSAGE);
                }

            }
            else {
                JOptionPane.showMessageDialog(this, "Invalid dni.", "Withdraw Balance", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_withdrawBalanceButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBalanceButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton viewHistoryButton;
    private javax.swing.JButton withdrawBalanceButton;
    // End of variables declaration//GEN-END:variables
}
